using EcsMagic.CommonComponents;
using Game.AbilityComponents;
using Game.Components;
using Game.StateMachineComponents;
using Game.WeaponComponents;
using Scellecs.Morpeh;
using UnityEngine;

namespace Game
{
    public static class StaticStash
    {
        public static Stash<Request_InitializeDamagable> Request_InitializeDamagable;
        public static Stash<DamageDealer> DamageDealer;
        public static Stash<DoNotDeactivateWhenParentChannelEnds> DoNotDeactivateWhenParentChannelEnds;

        public static void Initialize(World world)
        {
            DoNotDeactivateWhenParentChannelEnds = world.GetStash<DoNotDeactivateWhenParentChannelEnds>();
            RequestCreateLevel = world.GetStash<Request_CreateLevel>();
            WeaponTriggerPulled = world.GetStash<WeaponTriggerPulled>();
            CreateRequest_ChangeWorldForward = world.GetStash<CreateRequest_ChangeWorldForward>();
            AbilityTag = world.GetStash<AbilityTag>();
            ProviderActivator = world.GetStash<ProviderActivator>();
            ReactOn_WorldChanged = world.GetStash<ReactOn_LevelChanged>();
            MarkToDestroyWhenWorldChanged = world.GetStash<MarkToDestroyWhenLevelChanged>();
            TargetEntity = world.GetStash<TargetEntity>();
            LerpingMovementOvershootTimer = world.GetStash<LerpMovementOvershootTimer>();
            ParentEntity = world.GetStash<ParentEntity>();
            Targets = world.GetStash<Targets>();
            DoNotDeactivateWhenDurationEnds = world.GetStash<DoNotDeactivateWhenDurationEnds>();
            AbilityStateInitial = world.GetStash<AbilityState_Initial>();
            AbilityCustomData = world.GetStash<AbilityCustomData>();
            PartsToComplete = world.GetStash<PartsToComplete>();
            AbilityActivatedFromScript = world.GetStash<AbilityActivatedFromScript>();
            OneShotAbility = world.GetStash<OneShotAbility>();
            CooldownParts = world.GetStash<CooldownParts>();
            TargetingParts = world.GetStash<TargetingParts>();
            ForwardConditions = world.GetStash<ForwardConditions>();
            ForwardConditionsToMeet = world.GetStash<ForwardConditionsToMeet>();
            CancelActions = world.GetStash<CancelActions>();
            CancelConditionsToMeet = world.GetStash<CancelConditionsToMeet>();
            CancelConditions = world.GetStash<CancelConditions>();
            StateMachine = world.GetStash<StateMachine>();
            ChangeState = world.GetStash<ChangeState>();
            StateMachineExitTime = world.GetStash<StateMachineExitTime>();
            Transition = world.GetStash<Transition>();
            TransitionFrom = world.GetStash<TransitionFrom>();
            TransitionTo = world.GetStash<TransitionTo>();
            TransitionExitTime = world.GetStash<TransitionExitTime>();
            EnterAction = world.GetStash<EnterAction>();
            Abilities = world.GetStash<AbilitiesList>();
            TransitionNpcActions = world.GetStash<TransitionNpcActions>();
            Active = world.GetStash<Active>();
            UserEntity = world.GetStash<UserEntity>();
            TargetsProviderEntity = world.GetStash<TargetsProviderEntity>();
            UserTarget = world.GetStash<UserTarget>();
            AllInAOE = world.GetStash<AllInAOE>();
            LimitedInAOE = world.GetStash<LimitedInAOE>();
            TargetsFromTargetProvider = world.GetStash<TargetsFromTargetProvider>();

            Health = world.GetStash<Health>();
            HasBeenDamaged = world.GetStash<HasBeenDamaged>();
            AbilityCooldown = world.GetStash<AbilityCooldown>();
            IncreasingTimer = world.GetStash<IncreasingTimer>();
            TimerCompleted = world.GetStash<TimerCompleted>();
            AbilityRecharge = world.GetStash<AbilityRecharge>();
            ConditionFulfilled = world.GetStash<ConditionFulfilled>();
            CancellingCondition = world.GetStash<CancellingCondition>();
            ForwardCondition = world.GetStash<ForwardCondition>();
            DistanceToTargetGreaterThan = world.GetStash<DistanceToTargetGreaterThan>();
            DistanceToTargetLessThan = world.GetStash<DistanceToTargetLessThan>();
            NotOnCooldown = world.GetStash<NotOnCooldown>();
            AbilityActivated = world.GetStash<AbilityActivated>();
            AbilityHaveTarget = world.GetStash<AbilityHaveTarget>();
            CheckSphereCondition = world.GetStash<CheckSphereCondition>();
            CheckRaycastHitCondition = world.GetStash<CheckRaycastHitCondition>();
            TriggerConditionEnter = world.GetStash<TriggerConditionEnter>();
            TriggerConditionStay = world.GetStash<TriggerConditionStay>();
            TriggerConditionExit = world.GetStash<TriggerConditionExit>();
            CheckWeaponTriggerPulled = world.GetStash<CheckWeaponTriggerPulled>();
            CheckWeaponTriggerReleased = world.GetStash<CheckWeaponTriggerReleased>();
            CheckPrimaryAbilityPressed = world.GetStash<CheckPrimaryAbilityPressed>();
            CheckSecondaryAbilityPressed = world.GetStash<CheckSecondaryAbilityPressed>();
            CheckSprintPressed = world.GetStash<CheckSprintPressed>();
            CheckPrimaryAttackPressed = world.GetStash<CheckPrimaryAttackPressed>();
            CheckSecondaryAttackPressed = world.GetStash<CheckSecondaryAttackPressed>();
            CheckDashPressed = world.GetStash<CheckDashPressed>();
            CheckPrimaryAbilityReleased = world.GetStash<CheckPrimaryAbilityReleased>();
            CheckSecondaryAbilityReleased = world.GetStash<CheckSecondaryAbilityReleased>();
            CheckSprintReleased = world.GetStash<CheckSprintReleased>();
            CheckPrimaryAttackReleased = world.GetStash<CheckPrimaryAttackReleased>();
            CheckSecondaryAttackReleased = world.GetStash<CheckSecondaryAttackReleased>();
            CheckPrimaryAbilityWasPressed = world.GetStash<CheckPrimaryAbilityWasPressed>();
            CheckSecondaryAbilityWasPressed = world.GetStash<CheckSecondaryAbilityWasPressed>();
            CheckSprintWasPressed = world.GetStash<CheckSprintWasPressed>();
            CheckPrimaryAttackWasPressed = world.GetStash<CheckPrimaryAttackWasPressed>();
            CheckSecondaryAttackWasPressed = world.GetStash<CheckSecondaryAttackWasPressed>();
            CheckDashWasPressed = world.GetStash<CheckDashWasPressed>();
            ManaCondition = world.GetStash<ManaCondition>();
            HasBeenDamagedCondition = world.GetStash<HasBeenDamagedCondition>();
            VelocityGreaterThan = world.GetStash<VelocityGreaterThan>();
            VelocityLowerThan = world.GetStash<VelocityLowerThan>();
            RigidbodyFromConfig = world.GetStash<RigidbodyFromConfig>();
            GameObjectActive = world.GetStash<GameObjectActive>();
            GameObjectFromConfig = world.GetStash<GameObjectFromConfig>();
            YellowCubesCondition = world.GetStash<GatheredYellowCubesCondition>();
            TotalYellowCubesCondition = world.GetStash<TotalYellowCubesCondition>();
            HealthCondition = world.GetStash<HealthCondition>();
            // UserTeamCondition = world.GetStash<UserTeamCondition>();
            ConditionsToMeet = world.GetStash<ForwardConditionsToMeet>();
            NeedsActivation = world.GetStash<NeedsActivation>();
            Cancelled = world.GetStash<Cancelled>();
            AbilityState_CheckUseConditions = world.GetStash<AbilityState_CheckUseConditions>();
            AbilityState_StartCooldown = world.GetStash<AbilityState_StartCooldown>();
            AbilityState_Activating = world.GetStash<AbilityState_Activating>();
            AbilityState_Using = world.GetStash<AbilityState_Using>();
            AbilityState_Initial = world.GetStash<AbilityState_Initial>();
            UsageParts = world.GetStash<UsageParts>();
            UsageProgress = world.GetStash<UsageProgress>();
            Duration = world.GetStash<Duration>();
            InstantActions = world.GetStash<InstantActions>();
            UsageProgressPart = world.GetStash<UsageProgressPart>();
            UsageConfigs = world.GetStash<UsageConfigs>();
            ReferenceTransform = world.GetStash<Reference<Transform>>();
            WorldPosition = world.GetStash<WorldPosition>();
            CreateGameObject = world.GetStash<CreateGameObject>();
            CreateAbilityProvider = world.GetStash<CreateAbilityProvider>();
            CreateStateMachineProvider = world.GetStash<CreateStateMachineProvider>();
            SetGameObjectActive = world.GetStash<SetGameObjectActive>();
            EnableUserNavMeshAgent = world.GetStash<EnableUserNavMeshAgent>();
            DisableUserNavMeshAgent = world.GetStash<DisableUserNavMeshAgent>();
            ChangeUserNavMeshAgentSpeed = world.GetStash<ChangeUserNavMeshAgentSpeed>();
            Direction = world.GetStash<AbilityComponents.Direction>();
            DistanceToTarget = world.GetStash<DistanceToTarget>();
            InitialPosition = world.GetStash<InitialPosition>();
            InitialTargetPosition = world.GetStash<InitialTargetPosition>();
            TransformFromConfig = world.GetStash<TransformFromConfig>();
            ChangeAnimatorSettings = world.GetStash<ChangeAnimatorSettings>();
            DestroyUser = world.GetStash<DestroyUser>();
            AbilityPlayStaticParticle = world.GetStash<AbilityPlayStaticParticle>();
            SetAbilityActivated = world.GetStash<SetAbilityActivated>();
            ParticleAction = world.GetStash<ParticleAction>();
            ApplyDamage = world.GetStash<ApplyDamage>();
            RotateTransform = world.GetStash<RotateTransform>();
            WeaponTriggerAction = world.GetStash<WeaponTriggerAction>();
            RigidbodyActionAddForce = world.GetStash<RigidbodyActionAddForce>();
            RigidbodyActionSetKinematic = world.GetStash<RigidbodyActionSetKinematic>();
            PlayMMFeedback = world.GetStash<PlayMMFeedback>();
            AbilityChangeYellowCubes = world.GetStash<AbilityChangeYellowCubes>();
            AbilityCreateEnemy = world.GetStash<AbilityCreateEnemy>();
            MoveTransform = world.GetStash<MoveTransform>();
            LineRendererSetPosition = world.GetStash<LineRendererSetPosition>();
            AbilityChangeMana = world.GetStash<AbilityChangeMana>();
            AbilityRegenerateFullHealth = world.GetStash<AbilityRegenerateFullHealth>();
            AbilityRegenerateFullMana = world.GetStash<AbilityRegenerateFullMana>();
            AbilityDash = world.GetStash<AbilityDash>();
            AbilitySprint = world.GetStash<AbilitySprint>();
            AbilityChangeFloatStatValue = world.GetStash<AbilityChangeFloatStatValue>();
            AbilityAddFloatStatModifier = world.GetStash<AbilityAddFloatStatModifier>();
            AbilityRemoveFloatStatModifier = world.GetStash<AbilityRemoveFloatStatModifier>();
            ReturnToPool = world.GetStash<ReturnToPool>();
            DestroyGameObject = world.GetStash<DestroyGameObject>();
            ChangeComponentEnabled = world.GetStash<ChangeComponentEnabled>();
            Debug_AbilityLog = world.GetStash<Debug_AbilityLog>();
            Event_GameOverContinuePressed = world.GetStash<Event_GameOverContinuePressed>();
            Event_LevelChanged = world.GetStash<Event_LevelChanged>();
            DamageDealer = world.GetStash<DamageDealer>();
            Request_InitializeDamagable = world.GetStash<Request_InitializeDamagable>();
            WeaponAmmo = world.GetStash<WeaponAmmo>();
            Reloading = world.GetStash<Reloading>();
            Weapon = world.GetStash<Weapon>();
            ActiveWeapon = world.GetStash<ActiveWeapon>();
        }

        #region Declarations

        public static Stash<Event_GameOverContinuePressed> Event_GameOverContinuePressed;
        public static Stash<Event_LevelChanged> Event_LevelChanged;
        public static Stash<Request_CreateLevel> RequestCreateLevel;
        public static Stash<CreateRequest_ChangeWorldForward> CreateRequest_ChangeWorldForward;
        public static Stash<AbilityTag> AbilityTag;
        public static Stash<WeaponTriggerPulled> WeaponTriggerPulled;
        public static Stash<ProviderActivator> ProviderActivator;
        public static Stash<ReactOn_LevelChanged> ReactOn_WorldChanged;
        public static Stash<MarkToDestroyWhenLevelChanged> MarkToDestroyWhenWorldChanged;
        public static Stash<Debug_AbilityLog> Debug_AbilityLog;
        public static Stash<CancelConditionsToMeet> CancelConditionsToMeet;
        public static Stash<CancelConditions> CancelConditions;
        public static Stash<CancelActions> CancelActions;
        public static Stash<ForwardConditionsToMeet> ForwardConditionsToMeet;
        public static Stash<ForwardConditions> ForwardConditions;
        public static Stash<TargetingParts> TargetingParts;
        public static Stash<CooldownParts> CooldownParts;
        public static Stash<OneShotAbility> OneShotAbility;
        public static Stash<AbilityActivatedFromScript> AbilityActivatedFromScript;
        public static Stash<PartsToComplete> PartsToComplete;
        public static Stash<AbilityCustomData> AbilityCustomData;
        public static Stash<AbilityState_Initial> AbilityStateInitial;
        public static Stash<Targets> Targets;
        public static Stash<ParentEntity> ParentEntity;
        public static Stash<StateMachine> StateMachine;
        public static Stash<ChangeState> ChangeState;
        public static Stash<StateMachineExitTime> StateMachineExitTime;
        public static Stash<Transition> Transition;
        public static Stash<TransitionFrom> TransitionFrom;
        public static Stash<Reference<Transform>> ReferenceTransform;
        public static Stash<WorldPosition> WorldPosition;
        public static Stash<TransitionTo> TransitionTo;
        public static Stash<TransitionExitTime> TransitionExitTime;
        public static Stash<EnterAction> EnterAction;
        public static Stash<AbilitiesList> Abilities;
        public static Stash<TransitionNpcActions> TransitionNpcActions;
        public static Stash<Active> Active;
        public static Stash<UserEntity> UserEntity;
        public static Stash<TargetsProviderEntity> TargetsProviderEntity;
        public static Stash<UserTarget> UserTarget;
        public static Stash<AllInAOE> AllInAOE;
        public static Stash<LimitedInAOE> LimitedInAOE;
        public static Stash<TargetsFromTargetProvider> TargetsFromTargetProvider;
        public static Stash<HasBeenDamaged> HasBeenDamaged;
        public static Stash<Health> Health;
        public static Stash<AbilityCooldown> AbilityCooldown;
        public static Stash<IncreasingTimer> IncreasingTimer;
        public static Stash<TimerCompleted> TimerCompleted;
        public static Stash<AbilityRecharge> AbilityRecharge;
        public static Stash<ConditionFulfilled> ConditionFulfilled;
        public static Stash<CancellingCondition> CancellingCondition;
        public static Stash<ForwardCondition> ForwardCondition;
        public static Stash<DistanceToTargetGreaterThan> DistanceToTargetGreaterThan;
        public static Stash<DistanceToTargetLessThan> DistanceToTargetLessThan;
        public static Stash<NotOnCooldown> NotOnCooldown;
        public static Stash<AbilityActivated> AbilityActivated;
        public static Stash<AbilityHaveTarget> AbilityHaveTarget;
        public static Stash<CheckSphereCondition> CheckSphereCondition;
        public static Stash<CheckRaycastHitCondition> CheckRaycastHitCondition;
        public static Stash<TriggerConditionEnter> TriggerConditionEnter;
        public static Stash<TriggerConditionStay> TriggerConditionStay;
        public static Stash<TriggerConditionExit> TriggerConditionExit;
        public static Stash<CheckWeaponTriggerPulled> CheckWeaponTriggerPulled;
        public static Stash<CheckWeaponTriggerReleased> CheckWeaponTriggerReleased;
        public static Stash<CheckDashPressed> CheckDashPressed;
        public static Stash<CheckDashWasPressed> CheckDashWasPressed;
        public static Stash<CheckSprintPressed> CheckSprintPressed;
        public static Stash<CheckSprintReleased> CheckSprintReleased;
        public static Stash<CheckSprintWasPressed> CheckSprintWasPressed;
        public static Stash<CheckPrimaryAttackPressed> CheckPrimaryAttackPressed;
        public static Stash<CheckPrimaryAttackReleased> CheckPrimaryAttackReleased;
        public static Stash<CheckPrimaryAttackWasPressed> CheckPrimaryAttackWasPressed;
        public static Stash<CheckSecondaryAttackPressed> CheckSecondaryAttackPressed;
        public static Stash<CheckSecondaryAttackReleased> CheckSecondaryAttackReleased;
        public static Stash<CheckSecondaryAttackWasPressed> CheckSecondaryAttackWasPressed;
        public static Stash<CheckPrimaryAbilityPressed> CheckPrimaryAbilityPressed;
        public static Stash<CheckPrimaryAbilityReleased> CheckPrimaryAbilityReleased;
        public static Stash<CheckPrimaryAbilityWasPressed> CheckPrimaryAbilityWasPressed;
        public static Stash<CheckSecondaryAbilityPressed> CheckSecondaryAbilityPressed;
        public static Stash<CheckSecondaryAbilityReleased> CheckSecondaryAbilityReleased;
        public static Stash<CheckSecondaryAbilityWasPressed> CheckSecondaryAbilityWasPressed;
        public static Stash<ManaCondition> ManaCondition;
        public static Stash<HasBeenDamagedCondition> HasBeenDamagedCondition;
        public static Stash<VelocityGreaterThan> VelocityGreaterThan;
        public static Stash<VelocityLowerThan> VelocityLowerThan;
        public static Stash<RigidbodyFromConfig> RigidbodyFromConfig;
        public static Stash<GameObjectActive> GameObjectActive;
        public static Stash<GameObjectFromConfig> GameObjectFromConfig;
        public static Stash<GatheredYellowCubesCondition> YellowCubesCondition;
        public static Stash<TotalYellowCubesCondition> TotalYellowCubesCondition;
        public static Stash<HealthCondition> HealthCondition;
        // public static Stash<UserTeamCondition> UserTeamCondition;
        public static Stash<InstantActions> InstantActions;
        public static Stash<Duration> Duration;
        public static Stash<UsageProgress> UsageProgress;
        public static Stash<UsageParts> UsageParts;
        public static Stash<UsageProgressPart> UsageProgressPart;
        public static Stash<UsageConfigs> UsageConfigs;
        public static Stash<AbilityState_Initial> AbilityState_Initial;
        public static Stash<AbilityState_Using> AbilityState_Using;
        public static Stash<AbilityState_Activating> AbilityState_Activating;
        public static Stash<AbilityState_StartCooldown> AbilityState_StartCooldown;
        public static Stash<AbilityState_CheckUseConditions> AbilityState_CheckUseConditions;
        public static Stash<Cancelled> Cancelled;
        public static Stash<NeedsActivation> NeedsActivation;
        public static Stash<ForwardConditionsToMeet> ConditionsToMeet;
        public static Stash<CreateGameObject> CreateGameObject;
        public static Stash<CreateAbilityProvider> CreateAbilityProvider;
        public static Stash<CreateStateMachineProvider> CreateStateMachineProvider;
        public static Stash<SetGameObjectActive> SetGameObjectActive;
        public static Stash<EnableUserNavMeshAgent> EnableUserNavMeshAgent;
        public static Stash<DisableUserNavMeshAgent> DisableUserNavMeshAgent;
        public static Stash<ChangeUserNavMeshAgentSpeed> ChangeUserNavMeshAgentSpeed;
        public static Stash<AbilityComponents.Direction> Direction;
        public static Stash<DistanceToTarget> DistanceToTarget;
        public static Stash<InitialPosition> InitialPosition;
        public static Stash<InitialTargetPosition> InitialTargetPosition;
        public static Stash<TransformFromConfig> TransformFromConfig;
        public static Stash<ChangeAnimatorSettings> ChangeAnimatorSettings;
        public static Stash<PlayMMFeedback> PlayMMFeedback;
        public static Stash<DestroyUser> DestroyUser;
        public static Stash<AbilityPlayStaticParticle> AbilityPlayStaticParticle;
        public static Stash<SetAbilityActivated> SetAbilityActivated;
        public static Stash<ParticleAction> ParticleAction;
        public static Stash<ApplyDamage> ApplyDamage;
        public static Stash<RotateTransform> RotateTransform;
        public static Stash<WeaponTriggerAction> WeaponTriggerAction;
        public static Stash<RigidbodyActionAddForce> RigidbodyActionAddForce;
        public static Stash<RigidbodyActionSetKinematic> RigidbodyActionSetKinematic;
        public static Stash<AbilityChangeYellowCubes> AbilityChangeYellowCubes;
        public static Stash<AbilityCreateEnemy> AbilityCreateEnemy;
        public static Stash<MoveTransform> MoveTransform;
        public static Stash<LineRendererSetPosition> LineRendererSetPosition;
        public static Stash<AbilityChangeMana> AbilityChangeMana;
        public static Stash<AbilityRegenerateFullHealth> AbilityRegenerateFullHealth;
        public static Stash<AbilityRegenerateFullMana> AbilityRegenerateFullMana;
        public static Stash<AbilityDash> AbilityDash;
        public static Stash<AbilitySprint> AbilitySprint;
        public static Stash<AbilityChangeFloatStatValue> AbilityChangeFloatStatValue;
        public static Stash<AbilityAddFloatStatModifier> AbilityAddFloatStatModifier;
        public static Stash<AbilityRemoveFloatStatModifier> AbilityRemoveFloatStatModifier;
        public static Stash<ReturnToPool> ReturnToPool;
        public static Stash<DestroyGameObject> DestroyGameObject;
        public static Stash<ChangeComponentEnabled> ChangeComponentEnabled;
        public static Stash<DoNotDeactivateWhenDurationEnds> DoNotDeactivateWhenDurationEnds;
        public static Stash<LerpMovementOvershootTimer> LerpingMovementOvershootTimer;
        public static Stash<TargetEntity> TargetEntity;
        public static Stash<WeaponAmmo> WeaponAmmo;
        public static Stash<Reloading> Reloading;
        public static Stash<Weapon> Weapon;
        public static Stash<ActiveWeapon> ActiveWeapon;

        #endregion
    }
}